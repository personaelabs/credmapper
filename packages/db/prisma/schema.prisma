// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TransferEvent {
  transactionHash String @id
  blockNumber     BigInt
  from            String
  to              String
  tokenId         String
  contractAddress String
  chain           String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([to])
}

model ERC20TransferEvent {
  transactionHash  String @id
  transactionIndex Int
  logIndex         Int    @db.SmallInt
  blockNumber      BigInt
  from             String
  to               String
  value            String
  contractAddress  String
  contractId       Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([to])
  @@index([from])
  @@index([contractAddress])
  @@index([blockNumber])
}

model BeaconDepositEvent {
  transactionHash String @id
  value           String
  blockNumber     BigInt
  index           String
  address         String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model AddressInfo {
  address             String
  network             String
  firstTx             String
  firstTxTimestamp    DateTime
  txCount             Int
  contractDeployments String[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now()) @updatedAt

  @@id([address, network])
}

model User {
  fid            BigInt         @id
  username       String?
  displayName    String?
  pfp            String?
  bio            String?
  followersCount Int
  PackagedCast   PackagedCast[]
  UserCred       UserCred[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TxCount {
  address   String
  txCount   Int
  network   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([address, network])
}

model PackagedCast {
  id                String    @id
  text              String
  timestamp         DateTime
  mentions          BigInt[]
  mentionsPositions Int[]
  embeds            String[]
  likesCount        BigInt    @default(0)
  recastsCount      BigInt    @default(0)
  repliesCount      BigInt    @default(0)
  hash              String
  parentUrl         String?
  score             Float     @default(0)
  deletedAt         DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user User   @relation(fields: [fid], references: [fid])
  fid  BigInt
}

model UserCred {
  cred String
  fid  BigInt
  user User   @relation(fields: [fid], references: [fid])

  @@id([fid, cred])
}
